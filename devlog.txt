aTriceratopy
Brian Yang
Jonathan Song
Prattay Dey
Verit Li
pd 7
---------------------
Aeroplano Graveyardo


 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_/   \_____\/ \_____\/ \_____\/
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

veritL -- 2023-04-28 13:10
--------------------------------------------------------------
Added first version of devlog. Setup repo.
==============================================================
brianY -- 2023-04-28 13:14
--------------------------------------------------------------
Added team flag.
==============================================================
veritL -- 2023-05-03 00:39
--------------------------------------------------------------
Added first version design doc. (design0.pdf)
==============================================================
veritL -- 2023-05-04 00:35
--------------------------------------------------------------
Added updated design doc post-feedback.
Feedback asked about:
How we would incorporate animation:
    - Animating a plane flying its route
    - Possibly a cloud parting animation upon a page load
Explain why we want to cache the info of the rankins/trends of our data:
    - The rankings are stored so that they donâ€™t have to calculated every time the trends page is loaded
-- Also added link to D3.js graph gallery
==============================================================
brianY -- 2023-05-04 13:10
--------------------------------------------------------------
Added base files for flask, css, js
Created basic runabble flask
==============================================================
prattayD -- 2023-05-04 13:11
--------------------------------------------------------------
Started adding basic get requests for position stack api
==============================================================
veritL -- 2023-05-04 13:12
--------------------------------------------------------------
Started db.py and function for resetting database
Added base files for python
==============================================================
prattayD -- 2023-05-05 13:11
--------------------------------------------------------------
Added .gitignore
Added api access key to a private file not tracked by git
Still figuring out request calls to api
==============================================================
veritL -- 2023-05-07 23:34
--------------------------------------------------------------
Added demo html and javascript for root route
(Taken from k30)
==============================================================
prattayD -- 2023-05-08 13:10
--------------------------------------------------------------
Got api requests working
==============================================================
veritL -- 2023-05-08 13:15
--------------------------------------------------------------
Added populate_crashes() to db.py
==============================================================
veritL -- 2023-05-08 22:03
--------------------------------------------------------------
Brought README.md into compliance
==============================================================
BrianY -- 2023-5-08 23:56
--------------------------------------------------------------
Created a map using d3js for the main page
==============================================================
veritL -- 2023-05-09 12:42
--------------------------------------------------------------
Filled in requirements.txt
==============================================================
veritL -- 2023-05-09 13:16
--------------------------------------------------------------
Started getDate() style functions in db.py
==============================================================
veritL -- 2023-05-09 22:33
--------------------------------------------------------------
- latest best approach to pipelining your data from back-end to front-end:

0. gather the data you pipeline to front-end (potentially converting it to json)
1. use Flask to return this data to certain route (e.g. '/data')
    - '/data' acts as a DATA CONDUIT and is form where javascript can
      access the sent data
2. create a function in the javascript file (e.g. getData()) to access
   what is being returned to the '/data' route using
   fetch('/data') followed by more functions like
   .then(response => response.text()) or
   .then(response => response.json()) to parse the data

   and

    .then(data => {
        <A_VARIABLE> = data;
        console.log(jsonData); // Log the JSON data to the console
    });

    to store the data to a variable to be used.

chatGPT was used for help

- added some code to test pipelining
==============================================================
veritL -- 2023-05-10 13:14
--------------------------------------------------------------
More getDate() style functions in db.py
==============================================================
prattayD -- 2023-05-08 13:15
--------------------------------------------------------------
Looked into data visualizers for d3, starting js for ranking
==============================================================
veritL -- 2023-05-10 23:22
--------------------------------------------------------------
Added db.py functions to populate coordinates and rankings tables
Changed rankings table such that it stores item, category, rank, and number_of
==============================================================
veritL -- 2023-05-11 13:14
--------------------------------------------------------------
Started function to populate coordinates table, doesnt work properly
==============================================================
prattayD -- 2023-05-11 13:15
--------------------------------------------------------------
Continued exploring d3 line charts for rankings/trends
==============================================================
veritL -- 2023-05-11 20:17
--------------------------------------------------------------
Finished test function to populate coordinates table
Values returned are dummy values for now
==============================================================
veritL -- 2023-05-11 20:22
--------------------------------------------------------------
Realized that opening/committing/close for every single new row is slow
so changed populate_all_coordinates() to not do that
==============================================================
BrianY -- 2023-05-11 22:14
--------------------------------------------------------------
Created howto and api guide for Mapbox/MapboxGL
==============================================================
BrianY -- 2023-05-12 12:50
--------------------------------------------------------------
Added MapboxGL map to map.html
added function for adding markers to the map
==============================================================
veritL -- 2023-05-12 13:14
--------------------------------------------------------------
Made route_to_stops() function to db.py
==============================================================
BrianY -- 2023-05-14 13:00
--------------------------------------------------------------
Upadated README for Mapbox API after clearance granted
==============================================================
veritL -- 2023-05-15 02:03
--------------------------------------------------------------
Fixed errors in route_to_stops(): changed null to None and accounted
for a case where a route was an int

Connected app to droplet with address http://198.211.112.224:443/
There seems to be some weird behavior where if a route involves any
functions accessing the database, the following error will appear when
that route is accessed:
~~~
Internal Server Error
The server encountered an internal error and was unable to complete
your request. Either the server is overloaded or there is an error
in the application.
~~~
Not sure if this only prevents the user from viewing the data returned
or if this affects the javascript file too.
==============================================================
BrianY -- 2023-05-15 13:20
--------------------------------------------------------------
Broke Everything to hide mapbox api (Im sorry)
==============================================================
veritL -- 2023-05-15 23:51
--------------------------------------------------------------
Made some tests that tested d3.csv()
Found that it can access specified Flask routes, and can parse strings
in the format of:
"field0,field1\ndata0,data1\ndata2.data3"
==============================================================
BrianY -- 2023-05-16 18:46
--------------------------------------------------------------
Back up and working with much cleaner code
Mapbox api is now hidden
==============================================================
veritL -- 2023-05-17 12:36
--------------------------------------------------------------
get_all_dates() function
==============================================================
jonathanS -- 2023-05-17 12:58
--------------------------------------------------------------
Checked out other geocoder APIS
==============================================================
veritL -- 2023-05-18 01:39
--------------------------------------------------------------
added bunch of crash related get_all functions
==============================================================
BrianY -- 2023-05-18 13:12
Sort values handed by /data into a list
- Maybe find a better way to send data? 
==============================================================
prattayD -- 2023-05-18 13:07
--------------------------------------------------------------
Emissary Notes:
- Google Charts seems like a better alternative to D3 charts, docs look much easier to use
- Possible use of OpenStreet API for the map?
  - Might be too late to do this
- Team Amazing Edamame is implemented something very similar to use, would be useful to look fruther into their code
  - Right now they have a map with points plotted in various places, clicking on the point would show a small popup giving the coordinates of the point.
- Javascript onload() function may help with passing data from the db into the JS file
==============================================================
veritL -- 2023-05-19 13:12
--------------------------------------------------------------
Made forward_geocode() in api.py work for Bing Maps
==============================================================
prattayD -- 2023-05-18 13:07
--------------------------------------------------------------
- Updated db to cleaner and simplified code
- Continued working on rank.py
==============================================================
veritL -- 2023-05--20 14:16
--------------------------------------------------------------
- populate_all_coordinates() now works
  It takes about 25 min to finish so make a new reset.py file
  just for manually reseting/populating the database
- Added a try, except to forward_geocode() for invalid locations
==============================================================
veritL -- 2023-05--20 15:50
--------------------------------------------------------------
Realized that the names of the cols in the coordinates table 
for latitude and longitude were flipped, made it right
==============================================================
BrianY -- 2023-05--20 18:30
--------------------------------------------------------------
A list of things I did today: 
Added crashes to the map and created a bootstrap slider to place markers per decade to avoid clutter
Added new route to all crashes to fetch information not given by coordinates route
Added sumnmary page with all the extended info about crash
==============================================================
prattayD -- 2023-05-21 19:00
--------------------------------------------------------------
Worked on rank.py and trends.html and getting the first line chart done
==============================================================
veritL -- 2023-05--21 16:44
--------------------------------------------------------------
Fixed typo in __init__ that referenced Summary.html instead of summary.html
==============================================================
BrianY -- 2023-05--22 14:03
--------------------------------------------------------------
Added an increment choice to the map (1 year, 2 year, 5 year, decade)
==============================================================
BrianY -- 2023-05--22 22:30
--------------------------------------------------------------
Added stats to the side of the map
Added a button that directs the user to the trend page
==============================================================
prattayD -- 2023-05-22 23:48
--------------------------------------------------------------
Worked on rank.py and trends.html and getting the fatalities table done
Roadblocked by the same problem of JS not recognizing data as an array even after parsing
==============================================================
jonathanS -- 2023-05-23 00:12
--------------------------------------------------------------
Made personal list of all locations that return undesirable locations
==============================================================
veritL -- 2023-05--23 12:57
--------------------------------------------------------------
Updated README and requirements.txt
==============================================================
jonathanS -- 2023-05-23 20:46
--------------------------------------------------------------
Added conditionals that account for locations that don't align with geocoder output
==============================================================
BrianY -- 2023-05-23 21:53
--------------------------------------------------------------
Added navbar for easier traversal
Added 2 more charts
==============================================================



aTriceratopy
Brian Yang
Jonathan Song
Prattay Dey
Verit Li
pd 7
---------------------
Aeroplano Graveyardo


 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

veritL -- 2023-04-28 13:10
--------------------------------------------------------------
Added first version of devlog. Setup repo.
==============================================================
brianY -- 2023-04-28 13:14
--------------------------------------------------------------
Added team flag.
==============================================================
veritL -- 2023-05-03 00:39
--------------------------------------------------------------
Added first version design doc. (design0.pdf)
==============================================================
veritL -- 2023-05-04 00:35
--------------------------------------------------------------
Added updated design doc post-feedback.
Feedback asked about:
How we would incorporate animation:
    - Animating a plane flying its route
    - Possibly a cloud parting animation upon a page load
Explain why we want to cache the info of the rankins/trends of our data:
    - The rankings are stored so that they donâ€™t have to calculated every time the trends page is loaded
-- Also added link to D3.js graph gallery
==============================================================
brianY -- 2023-05-04 13:10
--------------------------------------------------------------
Added base files for flask, css, js
Created basic runabble flask
==============================================================
prattayD -- 2023-05-04 13:11
--------------------------------------------------------------
Started adding basic get requests for position stack api
==============================================================
veritL -- 2023-05-04 13:12
--------------------------------------------------------------
Started db.py and function for resetting database
Added base files for python
==============================================================
prattayD -- 2023-05-05 13:11
--------------------------------------------------------------
Added .gitignore
Added api access key to a private file not tracked by git
Still figuring out request calls to api
==============================================================
veritL -- 2023-05-07 23:34
--------------------------------------------------------------
Added demo html and javascript for root route
(Taken from k30)
==============================================================
prattayD -- 2023-05-08 13:10
--------------------------------------------------------------
Got api requests working
==============================================================
veritL -- 2023-05-08 13:15
--------------------------------------------------------------
Added populate_crashes() to db.py
==============================================================
veritL -- 2023-05-08 22:03
--------------------------------------------------------------
Brought README.md into compliance
==============================================================
BrianY -- 2023-5-08 23:56
--------------------------------------------------------------
Created a map using d3js for the main page
==============================================================
veritL -- 2023-05-09 12:42
--------------------------------------------------------------
Filled in requirements.txt
==============================================================
veritL -- 2023-05-09 13:16
--------------------------------------------------------------
Started getDate() style functions in db.py
==============================================================
veritL -- 2023-05-09 22:33
--------------------------------------------------------------
- latest best approach to pipelining your data from back-end to front-end:

0. gather the data you pipeline to front-end (potentially converting it to json)
1. use Flask to return this data to certain route (e.g. '/data')
    - '/data' acts as a DATA CONDUIT and is form where javascript can 
      access the sent data
2. create a function in the javascript file (e.g. getData()) to access 
   what is being returned to the '/data' route using
   fetch('/data') followed by more functions like 
   .then(response => response.text()) or 
   .then(response => response.json()) to parse the data

   and

    .then(data => {
        <A_VARIABLE> = data; 
        console.log(jsonData); // Log the JSON data to the console
    });

    to store the data to a variable to be used.

chatGPT was used for help

- added some code to test pipelining
==============================================================
veritL -- 2023-05-10 13:14
--------------------------------------------------------------
More getDate() style functions in db.py
==============================================================
prattayD -- 2023-05-08 13:15
--------------------------------------------------------------
Looked into data visualizers for d3, starting js for ranking
==============================================================
veritL -- 2023-05-10 23:22
--------------------------------------------------------------
Added db.py functions to populate coordinates and rankings tables
Changed rankings table such that it stores item, category, rank, and number_of
==============================================================